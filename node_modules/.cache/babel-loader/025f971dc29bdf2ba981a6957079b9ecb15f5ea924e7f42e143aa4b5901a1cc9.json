{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\esmart\\\\src\\\\views\\\\Task6.js\",\n  _s = $RefreshSig$();\n/**\r\n * Task 5: react useEffect hook\r\n * th2: useEffect(callback,[])\r\n */\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Task6 = () => {\n  _s();\n  const [posts, setpost] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isErrors, setIsError] = useState(false);\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const res = await fetch('https://jsonplaceholder.typicode.com/posts s');\n        if (!res.ok) {\n          throw new Error();\n        }\n        const data = await res.json();\n        if (data.length > 0) {\n          setpost(data);\n          setIsLoading(false);\n        }\n      } catch (error) {\n        setIsError(true);\n        setIsLoading(false);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), isErrors && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Sever internal errors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 26\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please waiting for munutes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 27\n    }, this), posts.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: post.title\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(Task6, \"EgF3erWFnaEb+Fi5xMZawagetno=\");\n_c = Task6;\nvar _c;\n$RefreshReg$(_c, \"Task6\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Task6","_s","posts","setpost","isLoading","setIsLoading","isErrors","setIsError","res","fetch","ok","Error","data","json","length","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","id","_c","$RefreshReg$"],"sources":["D:/React/esmart/src/views/Task6.js"],"sourcesContent":["/**\r\n * Task 5: react useEffect hook\r\n * th2: useEffect(callback,[])\r\n */\r\nimport { useEffect, useState } from \"react\"\r\nexport const Task6 = () => {\r\n    const [posts, setpost] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isErrors, setIsError] = useState(false);\r\n    useEffect(() => {\r\n        (\r\n            async () => {\r\n                try {\r\n                    setIsLoading(true);\r\n                    const res = await fetch('https://jsonplaceholder.typicode.com/posts s')\r\n                    if (!res.ok) { throw new Error(); }\r\n                    const data = await res.json();\r\n                    if (data.length > 0) {\r\n                        setpost(data);\r\n                        setIsLoading(false);\r\n                    }\r\n                } catch (error) {\r\n                    setIsError(true);\r\n                    setIsLoading(false);\r\n                }\r\n            }\r\n        )()\r\n    }, []);\r\n    return (\r\n        <>\r\n            <hr />\r\n            {isErrors && <div>Sever internal errors</div>}\r\n            {isLoading && <div>Please waiting for munutes</div>}\r\n            {posts.length > 0 && (\r\n                <ul>\r\n                    {posts.map(post => (\r\n                        <li key={post.id}>{post.title}</li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA;AACA;AACA;AACA;AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC3C,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,QAAQ,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC9CD,SAAS,CAAC,MAAM;IACZ,CACI,YAAY;MACR,IAAI;QACAW,YAAY,CAAC,IAAI,CAAC;QAClB,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,8CAA8C,CAAC;QACvE,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;UAAE,MAAM,IAAIC,KAAK,CAAC,CAAC;QAAE;QAClC,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;QAC7B,IAAID,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;UACjBX,OAAO,CAACS,IAAI,CAAC;UACbP,YAAY,CAAC,KAAK,CAAC;QACvB;MACJ,CAAC,CAAC,OAAOU,KAAK,EAAE;QACZR,UAAU,CAAC,IAAI,CAAC;QAChBF,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC,EACH,CAAC;EACP,CAAC,EAAE,EAAE,CAAC;EACN,oBACIR,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACInB,OAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLd,QAAQ,iBAAIT,OAAA;MAAAmB,QAAA,EAAK;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC5ChB,SAAS,iBAAIP,OAAA;MAAAmB,QAAA,EAAK;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAClDlB,KAAK,CAACY,MAAM,GAAG,CAAC,iBACbjB,OAAA;MAAAmB,QAAA,EACKd,KAAK,CAACmB,GAAG,CAACC,IAAI,iBACXzB,OAAA;QAAAmB,QAAA,EAAmBM,IAAI,CAACC;MAAK,GAApBD,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA,eACH,CAAC;AAEX,CAAC;AAAAnB,EAAA,CArCYD,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}