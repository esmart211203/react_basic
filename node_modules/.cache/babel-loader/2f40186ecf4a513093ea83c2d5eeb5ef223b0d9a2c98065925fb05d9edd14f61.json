{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\esmart\\\\src\\\\views\\\\Task6.js\",\n  _s = $RefreshSig$();\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { useFetch } from \"../services/useFetch\";\nimport { Task7 } from \"./Task7\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Task6 = () => {\n  _s();\n  const {\n    data,\n    isErrors,\n    isLoading\n  } = useFetch('https://jsonplaceholder.typicode.com/posts');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isErrors && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Server internal errors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 26\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please wait for minutes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 27\n    }, this), data && data.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: 'task-7',\n          params: {\n            id: post.id\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/task-7/${post.id}`,\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 29\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/task-7/:id\",\n        element: /*#__PURE__*/_jsxDEV(Task7, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Task6, \"FqhxZPiBgqs8TCVtxxz03EHPDEI=\", false, function () {\n  return [useFetch];\n});\n_c = Task6;\nvar _c;\n$RefreshReg$(_c, \"Task6\");","map":{"version":3,"names":["Routes","Route","Link","useFetch","Task7","jsxDEV","_jsxDEV","Fragment","_Fragment","Task6","_s","data","isErrors","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","to","params","id","title","path","element","_c","$RefreshReg$"],"sources":["D:/React/esmart/src/views/Task6.js"],"sourcesContent":["import { Routes, Route, Link } from \"react-router-dom\";\r\nimport { useFetch } from \"../services/useFetch\";\r\nimport { Task7 } from \"./Task7\";\r\n\r\nexport const Task6 = () => {\r\n    const { data, isErrors, isLoading } = useFetch('https://jsonplaceholder.typicode.com/posts');\r\n\r\n    return (\r\n        <>\r\n            {isErrors && <div>Server internal errors</div>}\r\n            {isLoading && <div>Please wait for minutes</div>}\r\n\r\n            {data && data.length > 0 && (\r\n                <ul>\r\n                    {data.map(post => (\r\n                        <li key={post.id}>\r\n                            <Link to={'task-7'} params={{ id: post.id }}></Link>\r\n                            <Link to={`/task-7/${post.id}`}>{post.title}</Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n\r\n            <Routes>\r\n                <Route path=\"/task-7/:id\" element={<Task7 />} />\r\n            </Routes>\r\n        </>\r\n    );\r\n};"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AACtD,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,KAAK,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC,IAAI;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGV,QAAQ,CAAC,4CAA4C,CAAC;EAE5F,oBACIG,OAAA,CAAAE,SAAA;IAAAM,QAAA,GACKF,QAAQ,iBAAIN,OAAA;MAAAQ,QAAA,EAAK;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC7CL,SAAS,iBAAIP,OAAA;MAAAQ,QAAA,EAAK;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAE/CP,IAAI,IAAIA,IAAI,CAACQ,MAAM,GAAG,CAAC,iBACpBb,OAAA;MAAAQ,QAAA,EACKH,IAAI,CAACS,GAAG,CAACC,IAAI,iBACVf,OAAA;QAAAQ,QAAA,gBACIR,OAAA,CAACJ,IAAI;UAACoB,EAAE,EAAE,QAAS;UAACC,MAAM,EAAE;YAAEC,EAAE,EAAEH,IAAI,CAACG;UAAG;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpDZ,OAAA,CAACJ,IAAI;UAACoB,EAAE,EAAG,WAAUD,IAAI,CAACG,EAAG,EAAE;UAAAV,QAAA,EAAEO,IAAI,CAACI;QAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAF9CG,IAAI,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP,eAEDZ,OAAA,CAACN,MAAM;MAAAc,QAAA,eACHR,OAAA,CAACL,KAAK;QAACyB,IAAI,EAAC,aAAa;QAACC,OAAO,eAAErB,OAAA,CAACF,KAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA,eACX,CAAC;AAEX,CAAC;AAACR,EAAA,CAxBWD,KAAK;EAAA,QACwBN,QAAQ;AAAA;AAAAyB,EAAA,GADrCnB,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}